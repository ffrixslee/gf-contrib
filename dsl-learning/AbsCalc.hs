-- Haskell data types for the abstract syntax.
-- Generated by the BNF converter.

module AbsCalc where

import Prelude (Char, Double, Integer, String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

data Exp
    = EAdd Exp Exp
    | ESub Exp Exp
    | EMul Exp Exp
    | EDiv Exp Exp
    | EInt Integer
  deriving (C.Eq, C.Ord, C.Show, C.Read)

