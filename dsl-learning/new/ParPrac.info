-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParPrac.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pTop -> Top                                 (0)
	Ident -> L_Ident                                   (1)
	WToken -> L_WToken                                 (2)
	Top -> Decl                                        (3)
	Decl -> 'Type' Ident WordnetID ':' Field           (4)
	Field -> 'Todo'                                    (5)
	WordnetID -> '(' WToken ')'                        (6)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	':'            { PT _ (TS _ 3) }
	'Todo'         { PT _ (TS _ 4) }
	'Type'         { PT _ (TS _ 5) }
	L_Ident        { PT _ (TV $$) }
	L_WToken       { PT _ (T_WToken $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pTop     rule  0
	Ident           rule  1
	WToken          rule  2
	Top             rule  3
	Decl            rule  4
	Field           rule  5
	WordnetID       rule  6

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pTop -> . Top                                (rule 0)

	'Type'         shift, and enter state 5

	Top            goto state 3
	Decl           goto state 4

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'('            reduce using rule 1


State 3

	%start_pTop -> Top .                                (rule 0)

	%eof           accept


State 4

	Top -> Decl .                                       (rule 3)

	%eof           reduce using rule 3


State 5

	Decl -> 'Type' . Ident WordnetID ':' Field          (rule 4)

	L_Ident        shift, and enter state 2

	Ident          goto state 6

State 6

	Decl -> 'Type' Ident . WordnetID ':' Field          (rule 4)

	'('            shift, and enter state 8

	WordnetID      goto state 7

State 7

	Decl -> 'Type' Ident WordnetID . ':' Field          (rule 4)

	':'            shift, and enter state 11


State 8

	WordnetID -> '(' . WToken ')'                       (rule 6)

	L_WToken       shift, and enter state 10

	WToken         goto state 9

State 9

	WordnetID -> '(' WToken . ')'                       (rule 6)

	')'            shift, and enter state 14


State 10

	WToken -> L_WToken .                                (rule 2)

	')'            reduce using rule 2


State 11

	Decl -> 'Type' Ident WordnetID ':' . Field          (rule 4)

	'Todo'         shift, and enter state 13

	Field          goto state 12

State 12

	Decl -> 'Type' Ident WordnetID ':' Field .          (rule 4)

	%eof           reduce using rule 4


State 13

	Field -> 'Todo' .                                   (rule 5)

	%eof           reduce using rule 5


State 14

	WordnetID -> '(' WToken ')' .                       (rule 6)

	':'            reduce using rule 6


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 7
Number of terminals: 7
Number of non-terminals: 7
Number of states: 15
